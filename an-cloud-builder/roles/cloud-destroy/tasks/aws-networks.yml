---
- name: Get the VPC ID for {{ cloud_vpc_name }}
  ec2_vpc_net_facts:
    aws_access_key: "{{ aws_access_key | default(omit) }}"
    aws_secret_key: "{{ aws_secret_key | default(omit) }}"
    region: "{{ cloud_vpc_data.region }}"
    filters:
      "tag:Name": "{{ cloud_vpc_name }}"
  register: vpc_net_facts

- block:
  - name: Set VPC ID
    set_fact:
      vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"
    failed_when: vpc_net_facts.vpcs[0] is not defined

  - name: Destroy AWS subnets for VPC {{ cloud_vpc_name }} in {{ cloud_vpc_data.region }}
    ec2_vpc_subnet:
      aws_access_key: "{{ aws_access_key | default(omit) }}"
      aws_secret_key: "{{ aws_secret_key | default(omit) }}"
      state: absent
      vpc_id: "{{ vpc_id }}"
      cidr: "{{ cloud_network_item.cidr }}"
      region: "{{ cloud_vpc_data.region }}"
      az: "{{ cloud_network_item.az }}"
      resource_tags:
        Name: "{{ cloud_network_item.name | default('tenant_network_item.cidr') }}"
        tenant: "{{ cloud_vpc_data.project }}"
    with_items: "{{ cloud_network_data | default([]) }}"
    loop_control:
      loop_var: cloud_network_item

  - name: Destroy AWS IGW for VPC {{ cloud_vpc_name }} in {{ cloud_vpc_data.region }}
    ec2_vpc_igw:
      aws_access_key: "{{ aws_access_key | default(omit) }}"
      aws_secret_key: "{{ aws_secret_key | default(omit) }}"
      region: "{{ cloud_vpc_data.region }}"
      vpc_id: "{{ vpc_id }}"
      state: absent
    register: igw_result

  - name: Get route tables for VPC {{ cloud_vpc_name }} in {{ cloud_vpc_data.region }}
    ec2_vpc_route_table_facts:
      region: "{{ cloud_vpc_data.region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
        route.destination-cidr-block: "{{ cloud_vpc_data.cidr }}"
    register: route_table_facts

  - name: Destroy route tables for VPC {{ cloud_vpc_name }} in {{ cloud_vpc_data.region }}
    ec2_vpc_route_table:
      aws_access_key: "{{ aws_access_key | default(omit) }}"
      aws_secret_key: "{{ aws_secret_key | default(omit) }}"
      state: absent
      vpc_id: "{{ vpc_id }}"
      region: "{{ cloud_vpc_data.region }}"
      route_table_id: "{{ route_table_item.id }}"
      lookup: id
    with_items: "{{ route_table_facts.route_tables }}"
    when: not route_table_item.associations
    loop_control:
      loop_var: route_table_item

  - name: Destroy AWS VPC {{ cloud_vpc_name }} in {{ cloud_vpc_data.region }}
    ec2_vpc_net:
      aws_access_key: "{{ aws_access_key | default(omit) }}"
      aws_secret_key: "{{ aws_secret_key | default(omit) }}"
      name: "{{ cloud_vpc_name }}"
      cidr_block: "{{ cloud_vpc_data.cidr }}"
      region: "{{ cloud_vpc_data.region }}"
      tags:
        tenant: "{{ cloud_vpc_data.project | default(tenant_name) }}"
      state: absent
    register: vpc_result
  when: vpc_net_facts.vpcs
