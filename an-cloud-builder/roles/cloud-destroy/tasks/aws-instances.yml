---
- name: Get the VPC ID for {{ cloud_vpc_name }}
  ec2_vpc_net_facts:
    aws_access_key: "{{ aws_access_key | default(omit) }}"
    aws_secret_key: "{{ aws_secret_key | default(omit) }}"
    region: "{{ cloud_vpc_data.region }}"
    filters:
      "tag:Name": "{{ cloud_vpc_name }}"
  register: vpc_net_facts

- block:
  - name: Set VPC ID
    set_fact:
      vpc_id: "{{ vpc_net_facts.vpcs[0].id }}"

  - name: Get the instance facts for project {{ cloud_vpc_data.project }}
    ec2_instance_facts:
      region: "{{ cloud_vpc_data.region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
        "tag:Environment": "{{ cloud_vpc_data.project }}"
    register: instance_facts

  - set_fact:
      instance_id_list: []

  - name: Create the list of instances to destroy in project {{ cloud_vpc_data.project }}
    set_fact:
      instance_id_list: "{{ instance_id_list + [ instance_facts_item.instance_id ] }}"
    with_items: "{{ instance_facts.instances }}"
    loop_control:
      loop_var: instance_facts_item

  - name: Destroy AWS Instances for project {{ cloud_vpc_data.project }} in {{ cloud_vpc_data.name }}
    ec2:
      aws_access_key: "{{ aws_access_key | default(omit) }}"
      aws_secret_key: "{{ aws_secret_key | default(omit) }}"
      region: "{{ cloud_vpc_data.region }}"
      instance_ids: "{{ instance_id_list }}"
      wait: yes
      state: absent
    when: instance_id_list

  - name: Get the list of interfaces in VPC {{ vpc_id }}
    ec2_eni_facts:
      region: "{{ cloud_vpc_data.region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
    register: eni_results

  - name: Delete all interfaces in VPC {{ vpc_id }}
    ec2_eni:
      region: "{{ cloud_vpc_data.region }}"
      eni_id: "{{ item.network_interface_id }}"
      state: absent
    with_items: "{{ eni_results.network_interfaces }}"

  when: vpc_net_facts.vpcs
